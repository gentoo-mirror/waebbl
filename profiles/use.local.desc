# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

dev-libs/imath:large-stack - Enables code to take advantage of large stack support
dev-libs/qtnproperty:demo - Build and install the demo program.
games-util/simulationcraft:gui - Builds the Qt5 GUI
media-gfx/alembic:examples - Install alembic examples
media-gfx/alembic:hdf5 - Add support sci-libs/hdf5
media-gfx/freecad:addonmgr - Build the addon manager module for automatic handling of 3rd party addons
media-gfx/freecad:cloud - Build the Cloud workbench, to access cloud providers (mostly Amazon S3).
media-gfx/freecad:fem - Build the FEM module and workbench which provides Finite Element Analysis (FEA) workflows
media-gfx/freecad:headless - Build FreeCAD without a GUI, usable for server-side instances. The Python modules are still available, without their GUI parts though.
media-gfx/freecad:idf - Build the IDF module to provide file exchange capabilities with IDF files
media-gfx/freecad:image - Build the image module and workbench for working with bitmap images
media-gfx/freecad:inspection - Build the inspection workbench which gives you specific tools for examination of shapes (experimental)
media-gfx/freecad:material - Build the material module and workbench to work with materials
media-gfx/freecad:openscad - Build the OpenSCAD module for interoperability with OpenSCAD and repairing Constructive Solid Geometry (CSG) history
media-gfx/freecad:part-design - Build the part design module and workbench for build part shapes from sketches
media-gfx/freecad:path - Build the path module and workbench to procude G-Code instructions for CNC
media-gfx/freecad:pcl - Use external sci-libs/pcl for point clouds support.
media-gfx/freecad:plot - Build the internal plot workbench. NOTE: This conflicts with the external plot workbench, which you can add via the Addon Manager!
media-gfx/freecad:points - Build the points module and workbench for working with point clouds
media-gfx/freecad:raytracing - Build the raytracing module and workbench for raytracing and rendering
media-gfx/freecad:robot - Build the robot module and workbench for studying robot movements
media-gfx/freecad:ship - Build the ship module and workbench which works over ship entities, that must be created on top of provided geometry. NOTE: This conflicts with the external ship workbench, which you can add via the Addon Manager!
media-gfx/freecad:show - Build the show module, a helper module for visibility automation
media-gfx/freecad:surface - Build the surface module and workbench
media-gfx/freecad:techdraw - Build the techdraw module and workbench, a more advanced and feature-rich successor of the drawing workbench
media-gfx/freecad:tux - Build the Tux module
media-libs/draco:compat - Build in compatibility mode.
media-libs/draco:gltf - Compile with support for glTF (GL Transmission Format) from The Khronos Group Inc.
media-libs/embree:clang - Use sys-devel/clang to compile Embree
media-libs/embree:ispc - Enables ISPC support for Embree through dev-lang/ispc
media-libs/embree:raymask - Enable the ray masking feature
media-libs/embree:tbb - Use Intel's threading library dev-cpp/tbb
media-libs/embree:tutorial - Compile and install the Embree tutorials.
media-libs/oidn:openimageio - Build apps with support for media-libs/openimageio
media-libs/openexr:large-stack - Enable code to take advantage of large stack support.
media-libs/openexr:utils - Build several utility binaries for verifying and manipulating EXR files.
sci-libs/magma:kepler - Compile for GPU NVIDIA Kepler family (sm_3x)
sci-libs/magma:maxwell - Compile for GPU NVIDIA Maxwell family (sm_5x)
sci-libs/magma:pascal - Compile for GPU NVIDIA Pascal family (sm_6x)
sci-libs/magma:sparse - Additionally build the sparse matrix library
sci-libs/magma:volta - Compile for GPU NVIDIA Volta family (sm_7x)
