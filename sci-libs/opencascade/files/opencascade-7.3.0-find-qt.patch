diff --git a/adm/cmake/qt.cmake b/adm/cmake/qt.cmake
index 01546ce..809369d 100644
--- a/adm/cmake/qt.cmake
+++ b/adm/cmake/qt.cmake
@@ -21,11 +21,11 @@ message (STATUS "Info: Qt is used from folder: ${3RDPARTY_QT_DIR}")
 
 # Now set CMAKE_PREFIX_PATH to point to local Qt installation.
 # Without this setting find_package() will not work
-set(CMAKE_PREFIX_PATH ${3RDPARTY_QT_DIR})
+#set(CMAKE_PREFIX_PATH ${3RDPARTY_QT_DIR})
 
 # Now we can apply standard CMake finder for Qt5. We do this mostly
 # to have qt5_wrap_cpp() function available and Qt5_FOUND variable filled
-find_package(Qt5 QUIET COMPONENTS Widgets Quick Xml PATHS ${3RDPARTY_QT_DIR} NO_DEFAULT_PATH)
+find_package(Qt5 COMPONENTS Widgets Quick Xml REQUIRED)
 if (NOT ${Qt5_FOUND})
   # Now we can apply standard CMake finder for Qt. We do this mostly
   # to have qt4_wrap_cpp() function available
diff --git a/adm/cmake/qt_macro.cmake b/adm/cmake/qt_macro.cmake
index ec89738..8bd314a 100644
--- a/adm/cmake/qt_macro.cmake
+++ b/adm/cmake/qt_macro.cmake
@@ -2,9 +2,9 @@
 
 macro (FIND_QT_PACKAGE PROJECT_LIBRARIES_DEBUG PROJECT_LIBRARIES_RELEASE PROJECT_INCLUDES)
 
-  if ("${3RDPARTY_QT_DIR}" STREQUAL "")
-    message (FATAL_ERROR "Empty Qt dir")
-  endif()
+#  if ("${3RDPARTY_QT_DIR}" STREQUAL "")
+#    message (FATAL_ERROR "Empty Qt dir")
+#  endif()
 
   if (${Qt5_FOUND})
     #message (STATUS "Qt5 cmake configuration")
